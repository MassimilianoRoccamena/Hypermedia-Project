#========================================= BASE ============================================

swagger: "2.0"

info:
  description: "Hypermedia project by Roccamena, Roman√≤, Buttolo"
  version: "1.0.0"
  title: "Child4Help"
  termsOfService: "http://swagger.io/terms/"
  
  
tags:
- name: "service"
  description: "Services provided"
- name: "event"
  description: "Events organized"
- name: "person"
  description: "People involved"
- name: "article"
  description: "Articles about the association"
- name: "contact"
  description: "Contacts of the association"


#========================================= PATHS ============================================

paths:

  #-------------------------------------- SERVICE -------------------------------------------
  
  /services:
    get:
      tags:
      - "service"
      summary: "Get all services"
      operationId: "getServiceAll"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Service"
              
  /service/{id_service}:
    get:
      tags:
      - "service"
      summary: "Get a service by ID"
      operationId: "getServiceByID"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_service"
        in: "path"
        description: "ID of service to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Service"
        "400":
          description: "Invalid ID"
        "404":
          description: "Service not found"
    delete:
      tags:
      - "service"
      summary: "Delete a service by ID"
      operationId: "deleteService"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_service"
        in: "path"
        description: "ID of service to be deleted"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid ID"
        "404":
          description: "Service not found"
          
  /service:
    post:
      tags:
      - "service"
      summary: "Add a new service"
      operationId: "addService"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "service"
        description: "Service object to be added"
        required: true
        schema:
          $ref: "#/definitions/Service"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid input"
    put:
      tags:
      - "service"
      summary: "Update a service"
      operationId: "updateService"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "service"
        description: "Service object to be updated"
        required: true
        schema:
          $ref: "#/definitions/Service"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid input"
        "404":
          description: "Service not found"
          
  /service/{id_service}/related:
    get:
      tags:
      - "service"
      summary: "Get related services of a selected service by ID"
      operationId: "getRelatedServicesByID"
      produces:
      - "application/json"
      parameters:
      - name: "id_service"
        in: "path"
        description: "ID of service to search for related"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Service"
        "400":
          description: "Invalid ID"
        "404":
          description: "Service not found"
          
  /services/related:
    post:
      tags:
      - "service"
      summary: "Add new related relation beetween services"
      operationId: "addRelatedServices"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "related"
        description: "Related services object to be added"
        required: true
        schema:
          $ref: "#/definitions/RelatedServices"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid input"
        "404":
          description: "Service not found"
    delete:
      tags:
      - "service"
      summary: "Delete related relation beetween services"
      operationId: "deleteRelatedServices"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "related"
        description: "Related services object to be deleted"
        required: true
        schema:
          $ref: "#/definitions/RelatedServices"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid input"
        "404":
          description: "Service not found"
          
  #-------------------------------------- EVENT -------------------------------------------
          
  /events:
    get:
      tags:
      - "event"
      summary: "Get all events"
      operationId: "getEventAll"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
              
  /events/{month}:
    get:
      tags:
      - "event"
      summary: "Get all events by month"
      operationId: "getEventByMonth"
      produces:
      - "application/json"
      parameters:
      - name: "month"
        in: "path"
        description: "Month of events to return"
        required: true
        type: "integer"
        format: "int64"
        minimum: 1.0
        maximum: 12.0
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
        "400":
          description: "Invalid month"
          
  /event/{id_event}:
    get:
      tags:
      - "event"
      summary: "Get an event by ID"
      operationId: "getEventByID"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_event"
        in: "path"
        description: "ID of event to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Event"
        "400":
          description: "Invalid ID"
        "404":
          description: "Event not found"
    delete:
      tags:
      - "event"
      summary: "Delete an event by ID"
      operationId: "deleteEvent"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_event"
        in: "path"
        description: "ID of event to be deleted"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid ID"
        "404":
          description: "Event not found"
          
  /event:
    post:
      tags:
      - "event"
      summary: "Add a new event"
      operationId: "addEvent"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "event"
        description: "Event object to be added"
        required: true
        schema:
          $ref: "#/definitions/Event"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid input"
    put:
      tags:
      - "event"
      summary: "Update an event"
      operationId: "updateEvent"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "event"
        description: "Event object to be updated"
        required: true
        schema:
          $ref: "#/definitions/Event"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid input"
        "404":
          description: "Event not found"
          
  /event/{id_event}/related:
    get:
      tags:
      - "event"
      summary: "Get related events of a selected event by ID"
      operationId: "getRelatedEventsByID"
      produces:
      - "application/json"
      parameters:
      - name: "id_event"
        in: "path"
        description: "ID of event to search for related"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
        "400":
          description: "Invalid ID"
        "404":
          description: "Event not found"
          
  /events/related:
    post:
      tags:
      - "event"
      summary: "Add new related relation beetween events"
      operationId: "addRelatedEvents"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "related"
        description: "Related events object to be added"
        required: true
        schema:
          $ref: "#/definitions/RelatedEvents"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid input"
        "404":
          description: "Event not found"
    delete:
      tags:
      - "event"
      summary: "Delete related relation beetween events"
      operationId: "deleteRelatedEvents"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "related"
        description: "Related events object to be deleted"
        required: true
        schema:
          $ref: "#/definitions/RelatedEvents"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid input"
        "404":
          description: "Event not found"
          
  #-------------------------------------- PERSON -------------------------------------------
  
  /people:
    get:
      tags:
      - "person"
      summary: "Get all people"
      operationId: "getPeopleAll"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Person"
              
  /person/{id_person}:
    get:
      tags:
      - "person"
      summary: "Get a person by ID"
      operationId: "getPersonByID"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_person"
        in: "path"
        description: "ID of person to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Person"
        "400":
          description: "Invalid ID"
        "404":
          description: "Person not found"
    delete:
      tags:
      - "person"
      summary: "Delete a person by ID"
      operationId: "deletePerson"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_person"
        in: "path"
        description: "ID of person to be deleted"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid ID"
        "404":
          description: "Person not found"
          
  /person:
    post:
      tags:
      - "person"
      summary: "Add a new person"
      operationId: "addPerson"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "person"
        description: "Person object to be added"
        required: true
        schema:
          $ref: "#/definitions/Person"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid input"
    put:
      tags:
      - "person"
      summary: "Update a person"
      operationId: "updatePerson"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "person"
        description: "Person object to be updated"
        required: true
        schema:
          $ref: "#/definitions/Person"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid input"
        "404":
          description: "Person not found"

#======================================= DEFINITIONS =========================================

definitions:

  Service:
    type: "object"
    required:
    - "id_service"
    properties:
      id_service:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      presentation:
        type: "string"
      informations:
        type: "string"
      location:
        type: "string"
      photo_url:
        type: "string"
    xml:
      name: "Service"
      
  RelatedServices:
    type: "object"
    required:
    - "id_service1"
    - "id_service2"
    properties:
      id_service1:
        type: "integer"
        format: "int64"
      id_service2:
        type: "integer"
        format: "int64"
    xml:
      name: "RelatedServices"
      
  Event:
    type: "object"
    required:
    - "id_event"
    properties:
      id_event:
        type: "integer"
        format: "int64"
      id_person:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      date:
        type: "string"
        format: "date"
      location:
        type: "string"
      description:
        type: "string"
      pract_info:
        type: "string"
      photo_url:
        type: "string"
    xml:
      name: "Event"
      
  RelatedEvents:
    type: "object"
    required:
    - "id_event1"
    - "id_event2"
    properties:
      id_event1:
        type: "integer"
        format: "int64"
      id_event2:
        type: "integer"
        format: "int64"
    xml:
      name: "RelatedEvents"
      
  Person:
    type: "object"
    required:
    - "id_person"
    properties:
      id_person:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      role:
        type: "string"
      email_address:
        type: "string"
        format: "email"
      phone_number:
        type: "string"
      description:
        type: "string"
      photo_url:
        type: "string"
      starting_date:
        type: "string"
        format: "date"
    xml:
      name: "Person"
    
  Article:
    type: "object"
    required:
    - "id_article"
    properties:
      id_article:
        type: "integer"
        format: "int64"
      id_service:
        type: "integer"
        format: "int64"
      id_event:
        type: "integer"
        format: "int64"
      author:
        type: "string"
      publication_date:
        type: "string"
        format: "date"
      email_address:
        type: "string"
        format: "email"
      title:
        type: "string"
      body:
        type: "string"
      photo_url:
        type: "string"
    xml:
      name: "Article"
      
  RelatedArticles:
    type: "object"
    required:
    - "id_article1"
    - "id_article"
    properties:
      id_article1:
        type: "integer"
        format: "int64"
      id_article2:
        type: "integer"
        format: "int64"
    xml:
      name: "RelatedArticles"
      
  Contact:
    type: "object"
    required:
    - "id_contact"
    properties:
      id_contact:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      phone:
        type: "string"
        format: "date"
      email_address:
        type: "string"
        format: "email"
      location:
        type: "string"
    xml:
      name: "Contact"