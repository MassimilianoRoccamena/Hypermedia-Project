---
swagger: "2.0"
info:
  description: "Hypermedia project by Roccamena, Roman√≤, Buttolo"
  version: "1.0.0"
  title: "Child4Help"
  termsOfService: "http://swagger.io/terms/"
host: "localhost:8080"
basePath: "/api"
tags:
- name: "service"
  description: "Services of the association"
- name: "event"
  description: "Events of the association"
- name: "person"
  description: "People in the association"
- name: "article"
  description: "Articles about the association"
- name: "contact"
  description: "Contacts of the association"
- name: "message"
  description: "Messages sent by user to the association"
- name: "link"
  description: "State changes of overall relations"
schemes:
- "https"
- "http"
paths:
  /services:
    get:
      tags:
      - "service"
      summary: "Get all services"
      operationId: "getServicesAll"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Service"
      x-swagger-router-controller: "Service"
  /services/items:
    get:
      tags:
      - "service"
      summary: "Get all services items"
      operationId: "getServicesItemsAll"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Services page number to get"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ServiceItem"
      x-swagger-router-controller: "Service"
  /service/{id_service}:
    get:
      tags:
      - "service"
      summary: "Get a service by ID"
      operationId: "getServiceByID"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_service"
        in: "path"
        description: "ID of service to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Service"
        "400":
          description: "Invalid ID"
        "404":
          description: "Service not found"
      x-swagger-router-controller: "Service"
    delete:
      tags:
      - "service"
      summary: "Delete a service by ID"
      operationId: "deleteService"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_service"
        in: "path"
        description: "ID of service to be deleted"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid ID"
        "404":
          description: "Service not found"
      x-swagger-router-controller: "Service"
  /service/{id_service}/page1:
    get:
      tags:
      - "service"
      summary: "Get a service page 1 data by ID"
      operationId: "getServicePage1ByID"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_service"
        in: "path"
        description: "ID of service to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ServicePage1"
        "400":
          description: "Invalid ID"
        "404":
          description: "Service not found"
      x-swagger-router-controller: "Service"
  /service/{id_service}/page2:
    get:
      tags:
      - "service"
      summary: "Get a service page 2 data by ID"
      operationId: "getServicePage2ByID"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_service"
        in: "path"
        description: "ID of service to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ServicePage2"
        "400":
          description: "Invalid ID"
        "404":
          description: "Service not found"
      x-swagger-router-controller: "Service"
  /service:
    post:
      tags:
      - "service"
      summary: "Add a new service"
      operationId: "addService"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "service"
        description: "Service object to be added"
        required: true
        schema:
          $ref: "#/definitions/Service"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid input"
      x-swagger-router-controller: "Service"
    put:
      tags:
      - "service"
      summary: "Update a service"
      operationId: "updateService"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "service"
        description: "Service object to be updated"
        required: true
        schema:
          $ref: "#/definitions/Service"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid input"
        "404":
          description: "Service not found"
      x-swagger-router-controller: "Service"
  /service/{id_service}/related:
    get:
      tags:
      - "service"
      summary: "Get related services of a selected service by ID"
      operationId: "getRelatedServicesByID"
      produces:
      - "application/json"
      parameters:
      - name: "id_service"
        in: "path"
        description: "ID of service to search for related"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ServiceItem"
        "400":
          description: "Invalid ID"
        "404":
          description: "Service not found"
      x-swagger-router-controller: "Service"
  /service/{id_service}/events:
    get:
      tags:
      - "service"
      summary: "Get events of a selected service by ID"
      operationId: "getServiceEventsByID"
      produces:
      - "application/json"
      parameters:
      - name: "id_service"
        in: "path"
        description: "ID of service to search for events"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EventItem"
        "400":
          description: "Invalid ID"
        "404":
          description: "Service not found"
      x-swagger-router-controller: "Service"
  /service/{id_service}/people:
    get:
      tags:
      - "service"
      summary: "Get people of a selected service by ID"
      operationId: "getServicePeopleByID"
      produces:
      - "application/json"
      parameters:
      - name: "id_service"
        in: "path"
        description: "ID of service to search for people"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PersonItem"
        "400":
          description: "Invalid ID"
        "404":
          description: "Service not found"
      x-swagger-router-controller: "Service"
  /service/{id_service}/articles:
    get:
      tags:
      - "service"
      summary: "Get articles of a selected service by ID"
      operationId: "getServiceArticlesByID"
      produces:
      - "application/json"
      parameters:
      - name: "id_service"
        in: "path"
        description: "ID of service to search for articles"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ArticleItem"
        "400":
          description: "Invalid ID"
        "404":
          description: "Service not found"
      x-swagger-router-controller: "Service"
  /events:
    get:
      tags:
      - "event"
      summary: "Get all events"
      operationId: "getEventsAll"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Event"
      x-swagger-router-controller: "Event"
  /events/items:
    get:
      tags:
      - "event"
      summary: "Get all events items"
      operationId: "getEventsItemAll"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Events page number to get"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EventItem"
      x-swagger-router-controller: "Event"
  /events/items/{month}:
    get:
      tags:
      - "event"
      summary: "Get all events by month"
      operationId: "getEventByMonth"
      produces:
      - "application/json"
      parameters:
      - name: "month"
        in: "path"
        description: "Month of events to return"
        required: true
        type: "integer"
        maximum: 12
        minimum: 1
        format: "int64"
      - name: "page"
        in: "query"
        description: "Events page number to get"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EventItem"
        "400":
          description: "Invalid month"
      x-swagger-router-controller: "Event"
  /event/{id_event}:
    get:
      tags:
      - "event"
      summary: "Get an event by ID"
      operationId: "getEventByID"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_event"
        in: "path"
        description: "ID of event to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Event"
        "400":
          description: "Invalid ID"
        "404":
          description: "Event not found"
      x-swagger-router-controller: "Event"
    delete:
      tags:
      - "event"
      summary: "Delete an event by ID"
      operationId: "deleteEvent"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_event"
        in: "path"
        description: "ID of event to be deleted"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid ID"
        "404":
          description: "Event not found"
      x-swagger-router-controller: "Event"
  /event/{id_event}/page1:
    get:
      tags:
      - "event"
      summary: "Get an event page 1 data by ID"
      operationId: "getEventPage1ByID"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_event"
        in: "path"
        description: "ID of event to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/EventPage1"
        "400":
          description: "Invalid ID"
        "404":
          description: "Event not found"
      x-swagger-router-controller: "Event"
  /event/{id_event}/page2:
    get:
      tags:
      - "event"
      summary: "Get an event page 2 data by ID"
      operationId: "getEventPage2ByID"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_event"
        in: "path"
        description: "ID of event to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/EventPage2"
        "400":
          description: "Invalid ID"
        "404":
          description: "Event not found"
      x-swagger-router-controller: "Event"
  /event:
    post:
      tags:
      - "event"
      summary: "Add a new event"
      operationId: "addEvent"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "event"
        description: "Event object to be added"
        required: true
        schema:
          $ref: "#/definitions/Event"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid input"
      x-swagger-router-controller: "Event"
    put:
      tags:
      - "event"
      summary: "Update an event"
      operationId: "updateEvent"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "event"
        description: "Event object to be updated"
        required: true
        schema:
          $ref: "#/definitions/Event"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid input"
        "404":
          description: "Event not found"
      x-swagger-router-controller: "Event"
  /event/{id_event}/related:
    get:
      tags:
      - "event"
      summary: "Get related events of a selected event by ID"
      operationId: "getRelatedEventsByID"
      produces:
      - "application/json"
      parameters:
      - name: "id_event"
        in: "path"
        description: "ID of event to search for related"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EventItem"
        "400":
          description: "Invalid ID"
        "404":
          description: "Event not found"
      x-swagger-router-controller: "Event"
  /event/{id_event}/services:
    get:
      tags:
      - "event"
      summary: "Get services of a selected event by ID"
      operationId: "getEventServicesByID"
      produces:
      - "application/json"
      parameters:
      - name: "id_event"
        in: "path"
        description: "ID of event to search for services"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ServiceItem"
        "400":
          description: "Invalid ID"
        "404":
          description: "Event not found"
      x-swagger-router-controller: "Event"
  /event/{id_event}/person:
    get:
      tags:
      - "event"
      summary: "Get person of a selected event by ID"
      operationId: "getEventPersonByID"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_event"
        in: "path"
        description: "ID of event to search for person"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/PersonItem"
        "400":
          description: "Invalid ID"
        "404":
          description: "Event not found"
      x-swagger-router-controller: "Event"
  /event/{id_event}/articles:
    get:
      tags:
      - "event"
      summary: "Get articles of a selected event by ID"
      operationId: "getEventArticlesByID"
      produces:
      - "application/json"
      parameters:
      - name: "id_event"
        in: "path"
        description: "ID of event to search for articles"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ArticleItem"
        "400":
          description: "Invalid ID"
        "404":
          description: "Event not found"
      x-swagger-router-controller: "Event"
  /people:
    get:
      tags:
      - "person"
      summary: "Get all people"
      operationId: "getPeopleAll"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Person"
      x-swagger-router-controller: "Person"
  /people/items:
    get:
      tags:
      - "person"
      summary: "Get all people items"
      operationId: "getPeopleItemsAll"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "People page number to get"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PersonItem"
      x-swagger-router-controller: "Person"
  /person/{id_person}:
    get:
      tags:
      - "person"
      summary: "Get a person by ID"
      operationId: "getPersonByID"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_person"
        in: "path"
        description: "ID of person to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Person"
        "400":
          description: "Invalid ID"
        "404":
          description: "Person not found"
      x-swagger-router-controller: "Person"
    delete:
      tags:
      - "person"
      summary: "Delete a person by ID"
      operationId: "deletePerson"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_person"
        in: "path"
        description: "ID of person to be deleted"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid ID"
        "404":
          description: "Person not found"
      x-swagger-router-controller: "Person"
  /person:
    post:
      tags:
      - "person"
      summary: "Add a new person"
      operationId: "addPerson"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "person"
        description: "Person object to be added"
        required: true
        schema:
          $ref: "#/definitions/Person"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid input"
      x-swagger-router-controller: "Person"
    put:
      tags:
      - "person"
      summary: "Update a person"
      operationId: "updatePerson"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "person"
        description: "Person object to be updated"
        required: true
        schema:
          $ref: "#/definitions/Person"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid input"
        "404":
          description: "Person not found"
      x-swagger-router-controller: "Person"
  /person/{id_person}/services:
    get:
      tags:
      - "person"
      summary: "Get services of a selected person by ID"
      operationId: "getPersonServicesByID"
      produces:
      - "application/json"
      parameters:
      - name: "id_person"
        in: "path"
        description: "ID of person to search for services"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ServiceItem"
        "400":
          description: "Invalid ID"
        "404":
          description: "Person not found"
      x-swagger-router-controller: "Person"
  /person/{id_person}/events:
    get:
      tags:
      - "person"
      summary: "Get events of a selected person by ID"
      operationId: "getPersonEventsByID"
      produces:
      - "application/json"
      parameters:
      - name: "id_person"
        in: "path"
        description: "ID of person to search for events"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/EventItem"
        "400":
          description: "Invalid ID"
        "404":
          description: "Person not found"
      x-swagger-router-controller: "Person"
  /articles:
    get:
      tags:
      - "article"
      summary: "Get all articles"
      operationId: "getArticlesAll"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Article"
      x-swagger-router-controller: "Article"
  /articles/items:
    get:
      tags:
      - "article"
      summary: "Get all articles items"
      operationId: "getArticlesItemsAll"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Articles page number to get"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ArticleItem"
      x-swagger-router-controller: "Article"
  /article/{id_article}:
    get:
      tags:
      - "article"
      summary: "Get an article by ID"
      operationId: "getArticleByID"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_article"
        in: "path"
        description: "ID of article to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Article"
        "400":
          description: "Invalid ID"
        "404":
          description: "Article not found"
      x-swagger-router-controller: "Article"
    delete:
      tags:
      - "article"
      summary: "Delete an article by ID"
      operationId: "deleteArticle"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_article"
        in: "path"
        description: "ID of article to be deleted"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid ID"
        "404":
          description: "Article not found"
      x-swagger-router-controller: "Article"
  /article:
    post:
      tags:
      - "article"
      summary: "Add a new article"
      operationId: "addArticle"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "article"
        description: "Article object to be added"
        required: true
        schema:
          $ref: "#/definitions/Article"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid input"
      x-swagger-router-controller: "Article"
    put:
      tags:
      - "article"
      summary: "Update an article"
      operationId: "updateArticle"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "article"
        description: "Article object to be updated"
        required: true
        schema:
          $ref: "#/definitions/Article"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid input"
        "404":
          description: "Article not found"
      x-swagger-router-controller: "Article"
  /article/{id_article}/related:
    get:
      tags:
      - "article"
      summary: "Get related articles of a selected article by ID"
      operationId: "getRelatedArticlesByID"
      produces:
      - "application/json"
      parameters:
      - name: "id_article"
        in: "path"
        description: "ID of article to search for related"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ArticleItem"
        "400":
          description: "Invalid ID"
        "404":
          description: "Article not found"
      x-swagger-router-controller: "Article"
  /article/{id_article}/service:
    get:
      tags:
      - "article"
      summary: "Get service of a selected article by ID"
      operationId: "getArticleServiceByID"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_article"
        in: "path"
        description: "ID of article to search for service"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/ServiceItem"
        "400":
          description: "Invalid ID"
        "404":
          description: "Article not found"
      x-swagger-router-controller: "Article"
  /article/{id_article}/event:
    get:
      tags:
      - "article"
      summary: "Get event of a selected article by ID"
      operationId: "getArticleEventByID"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_article"
        in: "path"
        description: "ID of article to search for event"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/EventItem"
        "400":
          description: "Invalid ID"
        "404":
          description: "Article not found"
      x-swagger-router-controller: "Article"
  /contacts:
    get:
      tags:
      - "contact"
      summary: "Get all contacts"
      operationId: "getContactsAll"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Contact"
      x-swagger-router-controller: "Contact"
  /contact/{id_contact}:
    get:
      tags:
      - "contact"
      summary: "Get a contact by ID"
      operationId: "getContactByID"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_contact"
        in: "path"
        description: "ID of contact to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Contact"
        "400":
          description: "Invalid ID"
        "404":
          description: "Contact not found"
      x-swagger-router-controller: "Contact"
    delete:
      tags:
      - "contact"
      summary: "Delete a contact by ID"
      operationId: "deleteContact"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_contact"
        in: "path"
        description: "ID of contact to be deleted"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid ID"
        "404":
          description: "Contact not found"
      x-swagger-router-controller: "Contact"
  /contact:
    post:
      tags:
      - "contact"
      summary: "Add a new contact"
      operationId: "addContact"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "contact"
        description: "Contact object to be added"
        required: true
        schema:
          $ref: "#/definitions/Contact"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid input"
      x-swagger-router-controller: "Contact"
    put:
      tags:
      - "contact"
      summary: "Update a contact"
      operationId: "updateContact"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "contact"
        description: "Contact object to be updated"
        required: true
        schema:
          $ref: "#/definitions/Contact"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid input"
        "404":
          description: "Contact not found"
      x-swagger-router-controller: "Contact"
  /messages:
    get:
      tags:
      - "message"
      summary: "Get all messages"
      operationId: "getMessagesAll"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Message"
      x-swagger-router-controller: "Message"
  /message/{id_message}:
    get:
      tags:
      - "message"
      summary: "Get a message by ID"
      operationId: "getMessageByID"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_message"
        in: "path"
        description: "ID of message to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/Message"
        "400":
          description: "Invalid ID"
        "404":
          description: "Message not found"
      x-swagger-router-controller: "Message"
    delete:
      tags:
      - "message"
      summary: "Delete a message by ID"
      operationId: "deleteMessage"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_message"
        in: "path"
        description: "ID of message to be deleted"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid ID"
        "404":
          description: "Message not found"
      x-swagger-router-controller: "Message"
  /message:
    post:
      tags:
      - "message"
      summary: "Add a new message"
      operationId: "addMessage"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "message"
        description: "Message object to be added"
        required: true
        schema:
          $ref: "#/definitions/Message"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid input"
      x-swagger-router-controller: "Message"
  /link/related/service:
    post:
      tags:
      - "link"
      summary: "Add new related relation beetween services"
      operationId: "addRelatedServices"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_service1"
        in: "query"
        description: "ID of first service"
        required: true
        type: "integer"
        format: "int64"
      - name: "id_service2"
        in: "query"
        description: "ID of second service"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid operation"
        "404":
          description: "Services not found"
      x-swagger-router-controller: "Link"
    delete:
      tags:
      - "link"
      summary: "Delete related relation beetween services"
      operationId: "deleteRelatedServices"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_service1"
        in: "query"
        description: "ID of first service"
        required: true
        type: "integer"
        format: "int64"
      - name: "id_service2"
        in: "query"
        description: "ID of second service"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid operation"
        "404":
          description: "Services not found"
      x-swagger-router-controller: "Link"
  /link/related/event:
    post:
      tags:
      - "link"
      summary: "Add new related relation beetween events"
      operationId: "addRelatedEvents"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_event1"
        in: "query"
        description: "ID of first event"
        required: true
        type: "integer"
        format: "int64"
      - name: "id_event2"
        in: "query"
        description: "ID of second event"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid operation"
        "404":
          description: "Events not found"
      x-swagger-router-controller: "Link"
    delete:
      tags:
      - "link"
      summary: "Delete related relation beetween events"
      operationId: "deleteRelatedEvents"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_event1"
        in: "query"
        description: "ID of first event"
        required: true
        type: "integer"
        format: "int64"
      - name: "id_event2"
        in: "query"
        description: "ID of second event"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid operation"
        "404":
          description: "Events not found"
      x-swagger-router-controller: "Link"
  /link/related/article:
    post:
      tags:
      - "link"
      summary: "Add new related relation beetween articles"
      operationId: "addRelatedArticles"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_article1"
        in: "query"
        description: "ID of first article"
        required: true
        type: "integer"
        format: "int64"
      - name: "id_article2"
        in: "query"
        description: "ID of second article"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid operation"
        "404":
          description: "Articles not found"
      x-swagger-router-controller: "Link"
    delete:
      tags:
      - "link"
      summary: "Delete related relation beetween articles"
      operationId: "deleteRelatedArticles"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_article1"
        in: "query"
        description: "ID of first article"
        required: true
        type: "integer"
        format: "int64"
      - name: "id_article2"
        in: "query"
        description: "ID of second article"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid operation"
        "404":
          description: "Articles not found"
      x-swagger-router-controller: "Link"
  /link/presented:
    post:
      tags:
      - "link"
      summary: "Add new service presented in event relation"
      operationId: "addServicesEvents"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_service"
        in: "query"
        description: "ID of service"
        required: true
        type: "integer"
        format: "int64"
      - name: "id_event"
        in: "query"
        description: "ID of event"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid operation"
        "404":
          description: "Service or event not found"
      x-swagger-router-controller: "Link"
    delete:
      tags:
      - "link"
      summary: "Delete service presented in event relation"
      operationId: "deleteServicesEvents"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_service"
        in: "query"
        description: "ID of service"
        required: true
        type: "integer"
        format: "int64"
      - name: "id_event"
        in: "query"
        description: "ID of event"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid operation"
        "404":
          description: "Service or event not found"
      x-swagger-router-controller: "Link"
  /link/involved:
    post:
      tags:
      - "link"
      summary: "Add new person involved in service relation"
      operationId: "addPeopleServices"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_person"
        in: "query"
        description: "ID of person"
        required: true
        type: "integer"
        format: "int64"
      - name: "id_service"
        in: "query"
        description: "ID of service"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid operation"
        "404":
          description: "Person or service not found"
      x-swagger-router-controller: "Link"
    delete:
      tags:
      - "link"
      summary: "Delete person involved in service relation"
      operationId: "deletePeopleServices"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_person"
        in: "query"
        description: "ID of person"
        required: true
        type: "integer"
        format: "int64"
      - name: "id_service"
        in: "query"
        description: "ID of service"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid operation"
        "404":
          description: "Person or service not found"
      x-swagger-router-controller: "Link"
  /link/contact:
    put:
      tags:
      - "link"
      summary: "Update event's contact relation"
      operationId: "updateEventContact"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_event"
        in: "query"
        description: "ID of event"
        required: true
        type: "integer"
        format: "int64"
      - name: "id_person"
        in: "query"
        description: "ID of person"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid operation"
        "404":
          description: "Event or person not found"
      x-swagger-router-controller: "Link"
  /link/discussed/service:
    put:
      tags:
      - "link"
      summary: "Update service discussed in article relation"
      operationId: "updateServiceArticles"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_article"
        in: "query"
        description: "ID of article"
        required: true
        type: "integer"
        format: "int64"
      - name: "id_service"
        in: "query"
        description: "ID of service"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid operation"
        "404":
          description: "Article or service not found"
      x-swagger-router-controller: "Link"
  /link/discussed/event:
    put:
      tags:
      - "link"
      summary: "Update event discussed in article relation"
      operationId: "updateEventArticles"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "id_article"
        in: "query"
        description: "ID of article"
        required: true
        type: "integer"
        format: "int64"
      - name: "id_event"
        in: "query"
        description: "ID of event"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Invalid operation"
        "404":
          description: "Article or event not found"
      x-swagger-router-controller: "Link"
definitions:
  Service:
    type: "object"
    required:
    - "id_service"
    properties:
      id_service:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      presentation:
        type: "string"
      informations:
        type: "string"
      location:
        type: "string"
      photo_url:
        type: "string"
    xml:
      name: "Service"
    example:
      presentation: "presentation"
      name: "name"
      location: "location"
      photo_url: "photo_url"
      id_service: 0
      informations: "informations"
  ServicePage1:
    type: "object"
    required:
    - "id_service"
    properties:
      id_service:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      presentation:
        type: "string"
      photo_url:
        type: "string"
    xml:
      name: "ServicePage1"
    example:
      presentation: "presentation"
      name: "name"
      photo_url: "photo_url"
      id_service: 0
  ServicePage2:
    type: "object"
    required:
    - "id_service"
    properties:
      id_service:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      informations:
        type: "string"
    xml:
      name: "ServicePage2"
    example:
      name: "name"
      id_service: 0
      informations: "informations"
  ServiceItem:
    type: "object"
    required:
    - "id_service"
    properties:
      id_service:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      presentation:
        type: "string"
      photo_url:
        type: "string"
    xml:
      name: "ServiceItem"
    example:
      presentation: "presentation"
      name: "name"
      photo_url: "photo_url"
      id_service: 0
  Event:
    type: "object"
    required:
    - "id_event"
    properties:
      id_event:
        type: "integer"
        format: "int64"
      id_person:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      date:
        type: "string"
        format: "date"
      location:
        type: "string"
      description:
        type: "string"
      pract_info:
        type: "string"
      photo_url:
        type: "string"
    xml:
      name: "Event"
    example:
      date: "2000-01-23"
      id_person: 6
      name: "name"
      description: "description"
      pract_info: "pract_info"
      location: "location"
      id_event: 0
      photo_url: "photo_url"
  EventPage1:
    type: "object"
    required:
    - "id_event"
    properties:
      id_event:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      description:
        type: "string"
      photo_url:
        type: "string"
    xml:
      name: "EventPage1"
    example:
      name: "name"
      description: "description"
      id_event: 0
      photo_url: "photo_url"
  EventPage2:
    type: "object"
    required:
    - "id_event"
    properties:
      id_event:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      date:
        type: "string"
        format: "date"
      location:
        type: "string"
      pract_info:
        type: "string"
    xml:
      name: "EventPage2"
    example:
      date: "2000-01-23"
      name: "name"
      pract_info: "pract_info"
      location: "location"
      id_event: 0
  EventItem:
    type: "object"
    required:
    - "id_event"
    properties:
      id_event:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      date:
        type: "string"
        format: "date"
      location:
        type: "string"
      photo_url:
        type: "string"
    xml:
      name: "EventItem"
    example:
      date: "2000-01-23"
      name: "name"
      location: "location"
      id_event: 0
      photo_url: "photo_url"
  Person:
    type: "object"
    required:
    - "id_person"
    properties:
      id_person:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      role:
        type: "string"
      email_address:
        type: "string"
        format: "email"
      phone_number:
        type: "string"
      description:
        type: "string"
      photo_url:
        type: "string"
      starting_date:
        type: "string"
        format: "date"
    xml:
      name: "Person"
    example:
      id_person: 0
      role: "role"
      email_address: "email_address"
      starting_date: "2000-01-23"
      name: "name"
      description: "description"
      phone_number: "phone_number"
      photo_url: "photo_url"
  PersonItem:
    type: "object"
    required:
    - "id_person"
    properties:
      id_person:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      photo_url:
        type: "string"
    xml:
      name: "PersonItem"
    example:
      id_person: 0
      name: "name"
      photo_url: "photo_url"
  Article:
    type: "object"
    required:
    - "id_article"
    properties:
      id_article:
        type: "integer"
        format: "int64"
      id_service:
        type: "integer"
        format: "int64"
      id_event:
        type: "integer"
        format: "int64"
      author:
        type: "string"
      publication_date:
        type: "string"
        format: "date"
      email_address:
        type: "string"
        format: "email"
      title:
        type: "string"
      body:
        type: "string"
      photo_url:
        type: "string"
    xml:
      name: "Article"
    example:
      id_article: 0
      email_address: "email_address"
      author: "author"
      publication_date: "2000-01-23"
      id_event: 1
      photo_url: "photo_url"
      title: "title"
      body: "body"
      id_service: 6
  ArticleItem:
    type: "object"
    required:
    - "id_article"
    properties:
      id_article:
        type: "integer"
        format: "int64"
      author:
        type: "string"
      publication_date:
        type: "string"
        format: "date"
      title:
        type: "string"
      photo_url:
        type: "string"
    xml:
      name: "ArticleItem"
    example:
      id_article: 0
      author: "author"
      publication_date: "2000-01-23"
      photo_url: "photo_url"
      title: "title"
  Contact:
    type: "object"
    required:
    - "id_contact"
    properties:
      id_contact:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      phone:
        type: "string"
      email_address:
        type: "string"
        format: "email"
      location:
        type: "string"
    xml:
      name: "Contact"
    example:
      email_address: "email_address"
      phone: "phone"
      name: "name"
      location: "location"
      id_contact: 0
  Message:
    type: "object"
    required:
    - "id_message"
    properties:
      id_message:
        type: "integer"
        format: "int64"
      sender_name:
        type: "string"
      sender_email:
        type: "string"
        format: "email"
      title:
        type: "string"
      body:
        type: "string"
    xml:
      name: "Message"
    example:
      id_message: 0
      sender_name: "sender_name"
      title: "title"
      body: "body"
      sender_email: "sender_email"
